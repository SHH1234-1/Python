import sys

st1 = list(sys.stdin.readline().rstrip()) #초기에 편집기에 입력되어 있는 문자열 여러개의 문자열을 입력하기 위해 sys.stdin.readline() + rstrip : 문자열에 오른쪽 공백이나 인자가된 문자열의 모든 조합을 제거
st2 = [] #명령어가 들어오면 커서의 위치를 옮겨주기 위해 문자열을 옮기기 위한 용도의 st2 list

for _ in range(int(sys.stdin.readline())): # 둘째 줄에는 입력할 명령어의 개수를 나타내는 정수 명령어의 개수만큼 반복
	command = list(sys.stdin.readline().split()) #셋째 줄부터 M개의 줄에 걸쳐 입력할 명령어가 순서대로 주어진다. 명령어를 입력 받고 p문자열을 입력할 경우 문자하나를 추가해야하므로 split()로 나눠서 command list안에 넣어준다
    if command[0] == 'L': # 입력한 문자열이 L일 경우
		if st1: #st1 list가 null이 아닐경우 (커서가 문장의 맨 앞이면 무시됨)
        	st2.append(st1.pop()) #st1에서 가장 최근에 입력한 문자를 pop 하고 st2 list에 append한다 커서를 왼쪽으로 한 칸 옮김 (커서가 문장의 맨 앞이면 무시됨)
            
	elif command[0] == 'D': #입력한 문자열이 D일 경우
    	if st2: #st2가 null이 아닐경우  (커서가 문장의 맨 뒤이면 무시됨)
        	st1.append(st2.pop()) st2 list에 있는 문자하나를 pop하여 st1에 append해준다 	커서를 오른쪽으로 한 칸 옮김 

	elif command[0] == 'B': #입력한 문자열이 D일 경우
    	if st1:
        	st1.pop()  #커서 왼쪽에 있는 문자를 삭제함 
            
	else:  #P $
    	st1.append(command[1])  #$(command[1]))라는 문자를 커서 왼쪽에 추가함

st1.extend(reversed(st2)) #st1 list에 st2를 뒤집어서 extend해줌 extend로 런타임을 개선
print(''.join(st1)) #st1 list출력 

